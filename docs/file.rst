.. _file:

v1/file
===========

上传文件
~~~~~~~~~~~

**URL**::

    POST      /

**POST Sample**：

提交多个file类型的字段，必须在HTTP头中加入

**Parameters**:

支持多文件上传。一次请求的body里可以有多个Key：[File1,File2,File3....]键值对；而每个
键值对中的Files可以加入多个File。建议每个Key仅对应一个File。key值的设定根据客户端使用
的不同框架会有不同的设置方式。比如，在HTML5中，key值就是input控件的name属性值。

**Response** `201`:

.. sourcecode:: json

    {
        "key1": [url1,url2,url3]
        "key2": [url4]
        "key3": [url5]
    }

**Memo**:
* 一次上传的所有文件总大小不可以超过6MB，否则会返回一个413错误码
* 支持以下文件类型['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif', 'amr']
* 如果任何一个文件上传失败都会返回错误码，并不会返回哪个文件上传成功，哪些文件上传失败
  如果有这样的需求，请联系leilei

关于文件上传后的后续处理
~~~~~~~~~~~~~~~~~~~~~~~~~~~

当文件上传成功后，服务器将返回所有上传文件的URI。这个URI是一个文件的完全访问地址。
通常来说每个文件URI都会在你后续的API调用中使用到，因为文件的上传仅仅是在网络上给这个
文件一个资源位置，并没有和当前的用户对象有任何的直接关联。

一个栗子：创建用户时可能需要上传头像。那么完整的用户创建应该分为两步，上传头像文件取得
文件的URL；将URL加入到用户基本信息里，再提交到服务器。

所有涉及到文件的操作都应该遵循这个原则，不要上传文件后不做后续操作，白白浪费服务器资源


关于CDN加速和图片裁剪、缩放
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

服务器目前返回的文件URI是经过CDN加速的URI。原始URI不再开放。通过CDN加速的URI支持对
图片文件进行裁剪和缩放。例如：

http://pic.hisihi.com/2015-11-23/6736273647.jpg@100w_100h.jpg

调用这个URI将对 *6736273647.jpg* 裁剪，得到一张高100宽100的图片
更多的裁剪、缩放、管道示例参见：

http://help.aliyun.com/document_detail/oss/oss-img-api/image-processing/resize.html




